version: '3.8'

services:
  # backend for development
  development:
    build:
      context: ./backend
      target: development
    depends_on:
      database:
        condition: service_healthy
      database-client:
        condition: service_healthy
    hostname: $BACKEND_HOST
    restart: unless-stopped
    networks: [server-network]
    expose: [$BACKEND_PORT]
    ports: [$BACKEND_PORT:$BACKEND_PORT]
    volumes: ['./backend:/usr/src/app']
    environment:
      DATABASE_URL: "postgresql://$DATABASE_USER:$DATABASE_PASSWORD@$DATABASE_HOST:$DATABASE_PORT/$DATABASE_NAME?schema=public"
      BACKEND_PORT: $BACKEND_PORT
      INTRA42_CLIENT_ID: $INTRA42_CLIENT_ID
      INTRA42_CLIENT_SECRET: $INTRA42_CLIENT_SECRET
      JWT_SECRET: $JWT_SECRET
      INTRA42_CALLBACK_URL: "http://localhost:$BACKEND_PORT/api/auth/intra42"
      FRONTEND_URL: "http://www.google.com"
      ENCRYPT_KEY: $ENCRYPT_KEY
  # backend for production
  production:
    build:
      context: ./backend
      target: production
    depends_on:
      database:
        condition: service_healthy
    hostname: $BACKEND_HOST
    restart: unless-stopped
    networks: [server-network]
    expose: [$BACKEND_PORT]
    environment:
      DATABASE_URL: "postgresql://$DATABASE_USER:$DATABASE_PASSWORD@$DATABASE_HOST:$DATABASE_PORT/$DATABASE_NAME?schema=public"
      BACKEND_PORT: $BACKEND_PORT
      INTRA42_CLIENT_ID: $INTRA42_CLIENT_ID
      INTRA42_CLIENT_SECRET: $INTRA42_CLIENT_SECRET
      INTRA42_CALLBACK_URL: "http://$SERVER_HOST/api/auth/intra42"
      FRONTEND_URL: "http://$SERVER_HOST"
      JWT_SECRET: $JWT_SECRET
      ENCRYPT_KEY: $ENCRYPT_KEY
  # database
  database:
    image: postgres:15-alpine
    hostname: $DATABASE_HOST
    restart: unless-stopped
    expose: [$DATABASE_PORT]
    volumes: [database-data:/var/lib/postgresql/data]
    networks: [server-network]
    environment:
      POSTGRES_USER: $DATABASE_USER
      POSTGRES_PASSWORD: $DATABASE_PASSWORD
      POSTGRES_DB: $DATABASE_NAME
      PGPORT: $DATABASE_PORT
    healthcheck:
      test: pg_isready -U $DATABASE_USER -d $DATABASE_NAME
      interval: 1s
      retries: 5
      start_period: 2s
  # database client
  database-client:
    depends_on:
      database:
        condition: service_healthy
    image: dbeaver/cloudbeaver:23.0.4
    restart: unless-stopped
    expose: [$DATABASE_CLIENT_PORT]
    ports: [$DATABASE_CLIENT_PORT:$DATABASE_CLIENT_PORT]
    networks: [server-network]
    volumes: [database-client-data:/opt/cloudbeaver/data]
    healthcheck:
      test: curl -f http://localhost:8978
      interval: 1s
      retries: 5
      start_period: 2s

networks:
  server-network:
    name: server-network

volumes:
  database-data:
    name: database-data
  database-client-data:
    name: database-client-data